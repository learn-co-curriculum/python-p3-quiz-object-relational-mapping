{
  "quiz": {
    "id": 53500,
    "title": "Object-Relational Mapping Quiz",
    "html_url": "https://learning.flatironschool.com/courses/7559/quizzes/53500",
    "mobile_url": "https://learning.flatironschool.com/courses/7559/quizzes/53500?force_user=1&persist_headless=1",
    "description": "<div id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"python-p3-quiz-object-relational-mapping\"></div>\n<header class=\"fis-header\"><a class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/python-p3-quiz-object-relational-mapping/issues/new\" target=\"_blank\"><img id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"></a></header>\n<p>It's time to check your knowledge! Use this quiz to create a custom study guide. Note any answers that were marked incorrect, so you can study the relevant material and try this quiz again.</p>\n<p>If you don't know the answer to a question, please do not guess. Instead, select \"I don't know\". It's OK not to know everything and to admit when we're unsure.</p>",
    "quiz_type": "assignment",
    "time_limit": null,
    "timer_autosubmit_disabled": false,
    "shuffle_answers": true,
    "show_correct_answers": true,
    "scoring_policy": "keep_highest",
    "allowed_attempts": 3,
    "one_question_at_a_time": true,
    "question_count": 9,
    "points_possible": 9.0,
    "cant_go_back": false,
    "access_code": null,
    "ip_filter": null,
    "due_at": null,
    "lock_at": null,
    "unlock_at": null,
    "published": false,
    "unpublishable": true,
    "locked_for_user": true,
    "lock_info": {
      "missing_permission": "participate_as_student",
      "asset_string": "quizzes:quiz_53500"
    },
    "lock_explanation": "This quiz is currently locked.",
    "hide_results": null,
    "show_correct_answers_at": null,
    "hide_correct_answers_at": null,
    "all_dates": [
      {
        "due_at": null,
        "unlock_at": null,
        "lock_at": null,
        "base": true
      }
    ],
    "can_unpublish": true,
    "can_update": true,
    "require_lockdown_browser": false,
    "require_lockdown_browser_for_results": false,
    "require_lockdown_browser_monitor": false,
    "lockdown_browser_monitor_data": "",
    "speed_grader_url": null,
    "permissions": {
      "manage": true,
      "read": true,
      "create": true,
      "update": true,
      "submit": true,
      "preview": true,
      "delete": true,
      "read_statistics": true,
      "grade": true,
      "review_grades": true,
      "view_answer_audits": true
    },
    "quiz_reports_url": "https://learning.flatironschool.com/api/v1/courses/7559/quizzes/53500/reports",
    "quiz_statistics_url": "https://learning.flatironschool.com/api/v1/courses/7559/quizzes/53500/statistics",
    "message_students_url": "https://learning.flatironschool.com/api/v1/courses/7559/quizzes/53500/submission_users/message",
    "section_count": 1,
    "important_dates": false,
    "quiz_submission_versions_html_url": "https://learning.flatironschool.com/courses/7559/quizzes/53500/submission_versions",
    "assignment_id": 263579,
    "one_time_results": false,
    "only_visible_to_overrides": false,
    "assignment_group_id": 25101,
    "show_correct_answers_last_attempt": true,
    "version_number": 4,
    "has_access_code": false,
    "post_to_sis": false,
    "migration_id": "gc478d052af9cfd7bc6343809d7eb9f0d",
    "in_paced_course": false,
    "question_types": [

    ]
  },
  "questions": [
    {
      "id": 366046,
      "quiz_id": 53500,
      "quiz_group_id": null,
      "assessment_question_id": 632202,
      "position": null,
      "question_name": "ORM: Basics",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Object Relational Mapping (ORM) is the technique of accessing a relational\ndatabase using what type of programming language? Choose the <strong>best</strong> answer.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Defining Object-Relational Mapping",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7559/pages/defining-object-relational-mapping\">Defining Object-Relational Mapping</a></li></ul><p></p>",
      "answers": [
        {
          "id": 645,
          "text": "",
          "html": "<p>Object-Oriented</p>",
          "comments": "",
          "comments_html": "<p>Whoooo!! Object Relational Mapping is a way for our programs to manage database\ndata by \"mapping\" database tables to classes and instances of classes to rows in\nthose tables.</p>",
          "weight": 100.0
        },
        {
          "id": 7375,
          "text": "",
          "html": "<p>Python</p>",
          "comments": "",
          "comments_html": "<p>Sort of. We can use Python, but we can also use other languages.</p>",
          "weight": 0.0
        },
        {
          "id": 3938,
          "text": "",
          "html": "<p>SQL</p>",
          "comments": "",
          "comments_html": "<p>Not quite. There's SQL under-the-hood, but it's not the star of the show.</p>",
          "weight": 0.0
        },
        {
          "id": 4729,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366047,
      "quiz_id": 53500,
      "quiz_group_id": null,
      "assessment_question_id": 632200,
      "position": null,
      "question_name": "ORM: Basics",
      "question_type": "multiple_choice_question",
      "question_text": "<p>To follow a pattern of <em>logical design</em>, if we have a <code>Car</code> Python class, what\nshould the corresponding SQL table be named?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:  Defining Object-Relational Mapping",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7559/pages/defining-object-relational-mapping?module_item_id=629291\">Defining Object-Relational Mapping</a></li></ul><p></p>",
      "answers": [
        {
          "id": 9424,
          "text": "",
          "html": "<p><code>cars</code></p>",
          "comments": "",
          "comments_html": "<p>Perfect! The table holds many cars, so it makes sense to call it cars.</p>",
          "weight": 100.0
        },
        {
          "id": 506,
          "text": "",
          "html": "<p><code>car</code></p>",
          "comments": "",
          "comments_html": "<p>Not quite. Does the table hold one car or many?</p>",
          "weight": 0.0
        },
        {
          "id": 6714,
          "text": "",
          "html": "<p><code>vehicle</code></p>",
          "comments": "",
          "comments_html": "<p>Not quite. Conventionally, our table names and class names use matching\nterminology, except one is singular and the other is plural.</p>",
          "weight": 0.0
        },
        {
          "id": 7038,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366048,
      "quiz_id": 53500,
      "quiz_group_id": null,
      "assessment_question_id": 632205,
      "position": null,
      "question_name": "ORM: Mapping",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Consider the following code:</p>\n<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Car</span><span class=\"p\">:</span>\n  <span class=\"k\">def</span> <span class=\"nf\">__init__</span> <span class=\"p\">(</span><span class=\"nb\">self</span><span class=\"p\">,</span> <span class=\"n\">make</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">):</span>\n    <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">make</span> <span class=\"o\">=</span> <span class=\"n\">make</span>\n    <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">model</span> <span class=\"o\">=</span> <span class=\"n\">model</span>\n</code></pre></div>\n<p>In order to \"map\" this <code>Car</code> class to a <code>cars</code> database table, what needs to be\ndone first?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:  Mapping Database Records to Python Objects",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7559/pages/v1-mapping-database-records-to-python-objects?module_item_id=g1ba1cadbb4dc31c512d279075f02de30\">Mapping Database Records to Python Objects</a></li></ul><p></p>",
      "answers": [
        {
          "id": 858,
          "text": "",
          "html": "<p>Create a database</p>",
          "comments": "",
          "comments_html": "<p>Yes! We can't map the class to anything if there's no database.</p>",
          "weight": 100.0
        },
        {
          "id": 3810,
          "text": "",
          "html": "<p>Create a <code>cars</code> table</p>",
          "comments": "",
          "comments_html": "<p>We actually need something else first. What stores tables?</p>",
          "weight": 0.0
        },
        {
          "id": 5404,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366049,
      "quiz_id": 53500,
      "quiz_group_id": null,
      "assessment_question_id": 632201,
      "position": null,
      "question_name": "Question 5",
      "question_type": "multiple_answers_question",
      "question_text": "<p>What are the steps needed to write a class that is mapped to a database table?\nSelect <strong>all</strong> that apply.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:  Mapping Database Records to Python Objects",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7559/pages/v1-mapping-database-records-to-python-objects?module_item_id=g1ba1cadbb4dc31c512d279075f02de30\">Mapping Database Records to Python Objects</a></li></ul><p></p>",
      "answers": [
        {
          "id": 2155,
          "text": "",
          "comments": "",
          "comments_html": "<p>Exactly! If the class is called Cat, the table should be called cats.</p>",
          "weight": 100.0,
          "html": "<p>Create a table with the same name as the class, but pluralized</p>"
        },
        {
          "id": 1005,
          "text": "",
          "comments": "",
          "comments_html": "<p>So true! We need the columns and attributes to match, so that we know which data\nwe're manipulating.</p>",
          "weight": 100.0,
          "html": "<p>Match the names of the table's columns to the attributes&nbsp;of the class</p>"
        },
        {
          "id": 3738,
          "text": "",
          "comments": "",
          "comments_html": "<p>Not quite. Remember that each row in the table is represented by an object, or\nan instance of a class. What might that mean?</p>",
          "weight": 0.0,
          "html": "<p>Match the names of the table's columns to class variables</p>"
        },
        {
          "id": 8185,
          "text": "",
          "comments": "",
          "comments_html": "<p>Not quite. The table name and class name should be similar, but not exactly the\nsame.</p>",
          "weight": 0.0,
          "html": "<p>Create a table with the exact same name as the class</p>"
        },
        {
          "id": 1525,
          "text": "",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0,
          "html": "<p>I don't know</p>"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366050,
      "quiz_id": 53500,
      "quiz_group_id": null,
      "assessment_question_id": 632199,
      "position": null,
      "question_name": "ORM: Mapping",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Consider a table with the following columns:</p>\n<div class=\"highlight\"><pre class=\"highlight plaintext\"><code>| id | make | model |\n</code></pre></div>\n<p>Which code snippet creates a class with instance methods mapped to these table\ncolumns, following ORM conventions?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:  Mapping Python Classes to a Database",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7559/assignments/263663?module_item_id=gc7052c1ec73a632ce1c697cca3431680\">Mapping Python Classes to a Database</a></li></ul><p></p>",
      "answers": [
        {
          "id": 8170,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Car</span><span class=\"p\">:</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">__init__</span> <span class=\"p\">(</span><span class=\"nb\">self</span><span class=\"p\">,</span> <span class=\"n\">make</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">):</span>\n    <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">id</span> <span class=\"o\">=</span> <span class=\"no\">None</span> <span class=\"err\">&nbsp;</span> <span class=\"err\">&nbsp;</span><span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">make</span> <span class=\"o\">=</span> <span class=\"n\">make</span>\n    <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">model</span> <span class=\"o\">=</span> <span class=\"n\">model</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Correct! The id is set to <code>None</code> because it should only be set after the record\nis saved to the database.</p>",
          "weight": 100.0
        },
        {
          "id": 4678,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Car</span><span class=\"p\">:</span>\n  <span class=\"k\">def</span> <span class=\"nf\">__init__</span> <span class=\"p\">(</span><span class=\"nb\">self</span><span class=\"p\">,</span> <span class=\"n\">make</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">):</span>\n    <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">id</span> <span class=\"o\">=</span> <span class=\"nb\">id</span>\n    <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">make</span> <span class=\"o\">=</span> <span class=\"n\">make</span>\n    <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">model</span> <span class=\"o\">=</span> <span class=\"n\">model</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Hmm, something is missing. Take a look at the id. The id shouldn't be saved\nuntil after the record has been saved to the database.</p>",
          "weight": 0.0
        },
        {
          "id": 3166,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366051,
      "quiz_id": 53500,
      "quiz_group_id": null,
      "assessment_question_id": 632206,
      "position": null,
      "question_name": "ORM: Mapping",
      "question_type": "multiple_answers_question",
      "question_text": "<p>Why do we use a dedicated method <code>save()</code> to insert a row into a table instead\nof saving the record in <code>__init__</code>?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:  Mapping Python Classes to a Database",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7559/assignments/263663?module_item_id=gc7052c1ec73a632ce1c697cca3431680\">Mapping Python Classes to a Database</a></li></ul><p></p>",
      "answers": [
        {
          "id": 964,
          "text": "",
          "comments": "",
          "comments_html": "<p>Yes! This makes our code more modular, so we can choose to create objects or\nsave to the database. This is much more flexible than coupling both functions in\nthe same method.</p>",
          "weight": 100.0,
          "html": "<p>We don't want to couple the creation of objects with saving records to a\ndatabase</p>"
        },
        {
          "id": 5693,
          "text": "",
          "comments": "",
          "comments_html": "<p>Exactly! We may need to manipulate those objects after certain tasks have run,\nand then save them.</p>",
          "weight": 100.0,
          "html": "<p>We might need to create objects without saving them to the database</p>"
        },
        {
          "id": 7975,
          "text": "",
          "comments": "",
          "comments_html": "<p>Not quite. We can do both of these things in a method if we want.</p>",
          "weight": 0.0,
          "html": "<p>We can't set the attributes and save the record in the same method</p>"
        },
        {
          "id": 2845,
          "text": "",
          "comments": "",
          "comments_html": "<p>We do have reasons, though this is a convention.</p>",
          "weight": 0.0,
          "html": "<p>There's no real reason. It's just a convention</p>"
        },
        {
          "id": 4744,
          "text": "",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0,
          "html": "<p>I don't know.</p>"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366052,
      "quiz_id": 53500,
      "quiz_group_id": null,
      "assessment_question_id": 632203,
      "position": null,
      "question_name": "ORM: Mapping",
      "question_type": "matching_question",
      "question_text": "<p>How does an ORM (Object-Relational Map) map between our object-oriented code and\na database table? Match each OO concept to the corresponding database structure:</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "Be sure to study the source/s for this question. You'll get it next time.",
      "neutral_comments": "Source/s:  Defining Object-Relational Mapping",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7559/pages/defining-object-relational-mapping\">Defining Object-Relational Mapping</a></li></ul><p></p>",
      "answers": [
        {
          "id": "8754",
          "text": "Class",
          "left": "Class",
          "right": "Database table",
          "comments": "",
          "comments_html": "",
          "match_id": 3770
        },
        {
          "id": "8873",
          "text": "Instance of a class",
          "left": "Instance of a class",
          "right": "Table row",
          "comments": "",
          "comments_html": "",
          "match_id": 700
        },
        {
          "id": "7035",
          "text": "Attribute belonging to a class",
          "left": "Attribute belonging to a class",
          "right": "Table column",
          "comments": "",
          "comments_html": "",
          "match_id": 6520
        },
        {
          "id": "253",
          "text": "Value of an attribute for an instance of a class",
          "left": "Value of an attribute for an instance of a class",
          "right": "Table cell",
          "comments": "",
          "comments_html": "",
          "match_id": 5947
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": [
        {
          "text": "Database table",
          "match_id": 3770
        },
        {
          "text": "Table row",
          "match_id": 700
        },
        {
          "text": "Table column",
          "match_id": 6520
        },
        {
          "text": "Table cell",
          "match_id": 5947
        }
      ],
      "matching_answer_incorrect_matches": ""
    },
    {
      "id": 366053,
      "quiz_id": 53500,
      "quiz_group_id": null,
      "assessment_question_id": 632204,
      "position": null,
      "question_name": "Question 1",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Using an ORM enables us to save entire Python objects in our database.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:  Mapping Python Classes to a Database",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7559/assignments/263663?module_item_id=gc7052c1ec73a632ce1c697cca3431680\">Mapping Python Classes to a Database</a></li></ul><p></p>",
      "answers": [
        {
          "id": 1110,
          "text": "",
          "html": "<p>True</p>",
          "comments": "",
          "comments_html": "<p>This one is a bit tricky! We are not able to save the object itself into our\ndatabase; instead, we are saving the <strong>data</strong> from the <strong>attributes</strong> of that\nobject.</p>",
          "weight": 0.0
        },
        {
          "id": 6316,
          "text": "",
          "html": "<p>False</p>",
          "comments": "",
          "comments_html": "<p>Right! We are not able to save the object itself into our database; instead, we\nare saving the <strong>data</strong> from the <strong>attributes</strong> of that object.</p>",
          "weight": 100.0
        },
        {
          "id": 3417,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366054,
      "quiz_id": 53500,
      "quiz_group_id": null,
      "assessment_question_id": 632198,
      "position": null,
      "question_name": "Question 2",
      "question_type": "multiple_answers_question",
      "question_text": "<p>Which of the following are advantages of using an ORM? Select all that apply.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:  Defining Object-Relational Mapping",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7559/pages/defining-object-relational-mapping\">Defining Object-Relational Mapping</a></li></ul><p></p>",
      "answers": [
        {
          "id": 2409,
          "text": "",
          "comments": "",
          "comments_html": "<p>Right! Abstraction is a very powerful tool that can make it much easier to grow\nour applications.</p>",
          "weight": 100.0,
          "html": "<p>It allows us to abstract common database tasks into methods.</p>"
        },
        {
          "id": 4168,
          "text": "",
          "comments": "",
          "comments_html": "<p>Right! It's quite convenient to have a Python class that knows how to insert\nrecords into SQL rather than having to write that code out by hand.</p>",
          "weight": 100.0,
          "html": "<p>It cuts down on repetitive code.</p>"
        },
        {
          "id": 5055,
          "text": "",
          "comments": "",
          "comments_html": "<p>Bingo! This pattern is a very common way to communicate with databases, and\nfollowing these conventions makes it easier to add more features as our\napplications grow by giving us a clear design to follow.</p>",
          "weight": 100.0,
          "html": "<p>It sets up a consistent, logical relationship between object-oriented code and\ndatabase tables.</p>"
        },
        {
          "id": 5920,
          "text": "",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0,
          "html": "<p>I don't know.</p>"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    }
  ]
}